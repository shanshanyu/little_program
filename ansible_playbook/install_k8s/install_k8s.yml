---
#一键部署k8s
- hosts: k8s  #首先在 /etc/ansible/hosts里面配置好k8s节点，以及登录信息
  tasks:
    - name: disabled firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld

    - name: disable selinux
      shell: sed -i 's/^SELINUX=enforcing$/SELINUX=disabled/' /etc/selinux/config || setenforce 0

    - name: copy hosts
      copy: src=./hosts dest=/etc/hosts

    - name: copy file
      copy: src=./k8s_mod.conf dest=/etc/modules-load.d/k8s.conf

    - name: enable mod
      shell: modprobe overlay

    - name: enable mod1
      shell: modprobe br_netfilter


    - name: copy file_1
      copy: src=./k8s.conf dest=/etc/sysctl.d/k8s.conf

    - name: enable args
      shell: sysctl --system


    - name: install docker dependency
      yum: name=container-selinux state=present

    - name: install docker dependency_1
      yum: name=libtool-ltdl state=present

    - name: install docker dependency_2
      yum: name=libseccomp state=present

    - name: copy docker rpm package
      copy: src=./docker-ce-18.06.3.ce-3.el7.x86_64.rpm dest=/tmp/docker-ce-18.06.3.ce-3.el7.x86_64.rpm

    - name: install docker by rpm
      yum: name=/tmp/docker-ce-18.06.3.ce-3.el7.x86_64.rpm state=present


    - name: copy containerd.io rpm package
      copy: src=./containerd.io-1.2.6-3.3.fc30.x86_64.rpm dest=/tmp/containerd.io-1.2.6-3.3.fc30.x86_64.rpm

    - name: install containerd.io
      yum: name=/tmp/containerd.io-1.2.6-3.3.fc30.x86_64.rpm state=present

    - name: copy cri-dockerd
      copy: src=./cri-dockerd-0.3.4-3.el7.x86_64.rpm dest=/tmp/cri-dockerd-0.3.4-3.el7.x86_64.rpm

    - name: install cri-dockerd
      yum: name=/tmp/cri-dockerd-0.3.4-3.el7.x86_64.rpm state=present


    - name: change cri-dockerd conf
      shell: sed -i 's#^ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd://$#ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd:// --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause --network-plugin=cni#'  /usr/lib/systemd/system/cri-docker.service


    - name: start docker
      shell: systemctl enable docker && systemctl start docker

    - name: start cri docker
      shell: systemctl enable cri-docker && systemctl start cri-docker

    - name: copy k8s repo
      copy: src=./kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo

    - name: install kubelet-1.25.4
      yum: name=kubelet-1.25.4 state=present

    - name: install kubeadm-1.25.4
      yum: name=kubeadm-1.25.4 state=present

    - name: install kubectl-1.25.4
      yum: name=kubectl-1.25.4 state=present

    - name: start kubelet
      shell: systemctl enable kubelet && systemctl start kubelet

    # copy flannel images
    - name: copy image
      copy: src=./flannel.tar dest=/tmp/flannel.tar

    - name: copy image_1
      copy: src=./flannel-cni-plugin.tar dest=/tmp/flannel-cni-plugin.tar

- hosts: k8s_control
  tasks:
    - name: load image
      shell: docker load -i /tmp/flannel.tar

    - name: load image_1
      shell:  docker load -i /tmp/flannel-cni-plugin.tar

    - name: init control panel
      shell: kubeadm init --apiserver-advertise-address={{api_server_address}} --image-repository registry.aliyuncs.com/google_containers --control-plane-endpoint=cluster-endpoint --cri-socket unix:///var/run/cri-dockerd.sock --kubernetes-version=v1.25.4 --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12 --ignore-preflight-errors=all

    - name: delegate privilege
      shell: mkdir -p $HOME/.kube && cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config

    - name: copy kube flannel yaml
      copy: src=./kube-flannel.yml dest=/tmp/kube-flannel.yml

    - name: install kube flannel
      shell: kubectl apply -f /tmp/kube-flannel.yml





